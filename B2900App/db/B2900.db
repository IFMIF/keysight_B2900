
# Common IEEE-488.2 Commands
#
record(stringin, "$(P)$(R)IDN") {
    field(DESC, "SCPI identification string")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getIDN(39) $(PORT) $(A)")
    field(PINI, "YES")
}
record(waveform, "$(P)$(R)IDNwf") {
    field(DESC, "SCPI identification string ")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getIDN(199) $(PORT) $(A)")
    field(PINI, "YES")
    field(FTVL, "CHAR")
    field(NELM, "200")
}
# Voltage Output range 
record(ai, "$(P)$(R)SOUR_VOLT_RANG_GET") {
    field(DESC, "Get Source Voltage Range")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getF(:SOURCE:VOLT:RANG) $(PORT) $(A)")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)SOUR_VOLT_RANG_SET") {
    field(DESC, "Set Source Voltage Range")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setF(:SOURCE:VOLT:RANG) $(PORT) $(A)")
}
record(ai, "$(P)$(R)SOUR_VOLT_GET") {
    field(DESC, "Get Source Voltage value")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getF(:SOUR:VOLT) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)SOUR_VOLT_SET") {
    field(DESC, "Set Source Voltage value")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setF(:SOUR:VOLT) $(PORT) $(A)")
}
record(bi, "$(P)$(R)SOUR_Output_GET") {
    field(DESC, "En/disable source output (get)")
    field(DTYP, "stream")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(INP,  "@B2900.proto getD(:OUTP) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(bo, "$(P)$(R)SOUR_Output_SET") {
    field(DESC, "En/disable source output (set)")
    field(DTYP, "stream")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(OUT,  "@B2900.proto setD(:OUTP) $(PORT) $(A)")
}
# record(ai, "$(P)$(R)SOUR_CURR_RANG_GET") {
#     field(DESC, "Get Source Current Range")
#     field(DTYP, "stream")
#     field(INP,  "@B2900.proto getF(:SOURCE:VOLT:RANG) $(PORT) $(A)")
#     field(PINI, "YES")
# }
# record(ao, "$(P)$(R)SOUR_CURR_RANG_SET") {
#     field(DESC, "Set Source Current Range")
#     field(DTYP, "stream")
#     field(OUT,  "@B2900.proto setF(:SOURCE:VOLT:RANG) $(PORT) $(A)")
# }
record(bi, "$(P)$(R)INP_STAT_GET") {
    field(DESC, "En/disable current or charge input (get)")
    field(DTYP, "stream")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(INP,  "@B2900.proto getD(:INP:STAT) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(bo, "$(P)$(R)INP_STAT_SET") {
    field(DESC, "En/disable current or charge input (set)")
    field(DTYP, "stream")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(OUT,  "@B2900.proto setD(:INP) $(PORT) $(A)")
}
record(stringin, "$(P)$(R)SENS_FUNC_GET") {
    field(DESC, "get which measurement sensor")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getS(:SENS:FUNC) $(PORT) $(A)")
    field(SCAN, "1 second")
}
record(stringout, "$(P)$(R)SENS_FUNC_SET") {
    field(DESC, "set which measurement sensor")
    field(DTYP, "stream")
    field(VAL, "CURR")
    field(OUT,  "@B2900.proto setS(:SENS:FUNC) $(PORT) $(A)")
}
# Trigger settings
record(stringin, "$(P)$(R)TIN_Pol_GET") {
    field(DESC, "Trigger's polarity Get")
    field(ZNAM, "NEG")
    field(ONAM, "POS")
    field(OUT,  "@B2900.proto getS(:SYST:TIN:POL) $(PORT) $(A)")
}
record(stringout, "$(P)$(R)TIN_Pol_SET") {
    field(DESC, "Trigger's polarity Set")
    field(VAL,  "1")
    field(ZNAM, "NEG")
    field(ONAM, "POS")
    field(INP,  "@B2900.proto setS(:SYST:TIN:POL) $(PORT) $(A)")
}
record(stringin, "$(P)$(R)TRIG_ACQ_SOUR_GET") {
    field(DESC, "TRIG source for Aquisition GET")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getS(:TRIG:ACQ:SOUR) $(PORT) $(A)")
    field(SCAN, "1 second")
}
record(stringout, "$(P)$(R)TRIG_ACQ_SOUR_SET") {
    field(DESC, "TRIG source for Aquisition SET")
    field(DTYP, "stream")
    field(VAL, "CURR")
    field(OUT,  "@B2900.proto setS(:TRIG:ACQ:SOUR) $(PORT) $(A)")
}
record(ai, "$(P)$(R)TRIG_ACQ_COUN_GET") {
    field(DESC, "Source Voltage Range")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getD(:TRIG:ACQ:COUN) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)TRIG_ACQ_COUN_SET") {
    field(DESC, "Set Source Voltage Range")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setD(:TRIG:ACQ:COUN) $(PORT) $(A)")
}
record(ai, "$(P)$(R)TRIG_ACQ_TIM_GET") {
    field(DESC, "Trigger Period")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getD(:TRIG:ACQ:TIM) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)TRIG_ACQ_TIM_SET") {
    field(DESC, "Trigger Period")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setD(:TRIG:ACQ:TIM) $(PORT) $(A)")
}
record(ai, "$(P)$(R)TRIG_ACQ_DEL_GET") {
    field(DESC, "Trigger Delay")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getD(:TRIG:ACQ:DEL) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)TRIG_ACQ_DEL_SET") {
    field(DESC, "Trigger Delay")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setD(:TRIG:ACQ:DEL) $(PORT) $(A)")
}
record(stringin, "$(P)$(R)TRIG_MODE_GET") {
    field(DESC, "Source Voltage Range")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getS(:TRIG:ACQ:SOUR) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(stringout, "$(P)$(R)TRIG_MODE_SET") {
    field(DESC, "Set Source Voltage Range")
    field(DTYP, "stream")
    field(VAL, "13")
    field(OUT,  "@B2900.proto setD(:TRIG:ACQ:SOUR) $(PORT) $(A)")
}
record(ai, "$(P)$(R)CURR_APER_GET") {
    field(DESC, "Get Source Current Aperture")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getD(:CURR:APER) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(ao, "$(P)$(R)CURR_APER_SET") {
    field(DESC, "Set Source Current Aperture")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setD(:CURR:APER) $(PORT) $(A)")
}
## Acquisition Commands
record(stringin, "$(P)$(R)EL_SENS_GET") {
    field(DESC, "GET data to be fetched")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getS(:FORM:ELEM:SENS) $(PORT) $(A)")
    field(SCAN, "1 second")
    field(PINI, "YES")
}
record(stringout, "$(P)$(R)EL_SENS_SET") {
    field(DESC, "SET data to be fetched")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto setS(:FORM:ELEM:SENS) $(PORT) $(A)")
    field(VAL, "CURR") # only current for a default
}
record(bo, "$(P)$(R)INIT_ACQ") {
    field(DESC, "Initiate Acquisition")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto cmd(:INIT:ACQ) $(PORT) $(A)")
}
record(bo, "$(P)$(R)ABOR_ACQ") {
    field(DESC, "Abort Acquisition")
    field(DTYP, "stream")
    field(OUT,  "@B2900.proto cmd(:ABOR:ACQ) $(PORT) $(A)")
    field(FLNK, "$(P)$(R)FETCH_ARRAY")
}
record(aai, "$(P)$(R)FETCH_ARRAY") {
    field(DESC, "Fetch selected array after acquisition")
    field(DTYP, "stream")
    field(INP,  "@B2900.proto getArray(:FETC:ARR) $(PORT) $(A)")
    field(SCAN, "Passive")
    field(FTVL, "DOUBLE")
}